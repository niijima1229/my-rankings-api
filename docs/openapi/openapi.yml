openapi: "3.0.3"
info:
  title: MyRankings OpenAPI
  description: This is MyRankings API
  version: 1.0.0

servers:
  - url: 'http://localhost:80'
    description: 'API サーバー'
paths:
  /users:
    post:
      tags:
        - users
      description: 単体のユーザーを登録
      operationId: CreateUser
      responses:
        '200':
          description: ユーザー情報取得成功
  /users/{id}:
    get:
      tags: 
        - users
      description: 単体のユーザーの情報を取得
      operationId: GetUser
      parameters:
        - $ref: '#/components/parameters/UserId'
      responses:
        "200":
          description: ユーザー情報取得成功
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/User"
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFound'
        "500":
          $ref: '#/components/responses/InternalServerError'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      tags: 
        - users
      description: ユーザー情報1件更新
      operationId: UpdateUser
      parameters:
        - $ref: '#/components/parameters/UserId'
      requestBody:
        $ref: '#/components/requestBodies/UpdateUserBody'
      responses:
        '200':
          description: ユーザー情報更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /rankings:
    get:
      tags: 
        - rankings
      description: 全てのランキングを取得
      operationId: GetRankings
      responses:
        '200':
          description: ランキング情報取得成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Ranking"
              examples:
                example1:
                  value:
                    - id: 1
                      user: { id: 1, name: John Doe }
                      title: Hogeランキング
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      tags:
        - rankings
      description: ランキングを１件作成
      operationId: CreateRanking
      responses:
        '200':
          description: ランキング情報登録成功
          content:
            application/json:
              schema:
                type: object
  /rankings/{id}:
    get:
      tags:
        - rankings
      description: ランキングを１件取得
      operationId: GetRanking
      parameters:
        - name: rankingId
          in: path
          description: ranking id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: ランキング情報取得成功
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Ranking"
              examples:
                example:
                  value:
                      id: 1
                      user: { id: 1, name: John Doe }
                      title: Hogeランキング
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /rankings/{id}/login:
    post:
      tags: 
        - rankings
      description: 審査員が採点のためにログイン
      operationId: JudgeLogin
      parameters:
        - name: rankingId
          in: path
          description: ranking id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 審査員ログイン成功
          content:
            application/json:
              schema: 
                type: object
                items: 
                  $ref: "#/components/schemas/Ranking"
  /my-rankings:
    get:
      tags: 
        - myRankings
      description: ログインしているユーザーのランキング情報
      operationId: getMyRankings
      responses:
        "200":
          description: 自分のランキング情報取得成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Ranking"
                example:
                  - id: 1
                    user: { id: 1, name: John Doe }
                    title: Hogeランキング
                    rankingItems:
                      - id: 1
                        name: 富士山
                        rank: 1
                        score: 100
                      - id: 2
                        name: 北岳
                        rank: 2
                        score: 90
                      - id: 3
                        name: 穂高岳
                        rank: 3
                        score: 80
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /my-rankings/{rankingId}:
    get:
      tags: 
        - myRankings
      description: ログインしているユーザーのランキング情報
      operationId: getMyRanking
      responses:
        "200":
          description: 自分のランキング情報取得成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Ranking"
                example:
                  - id: 1
                    user: { id: 1, name: John Doe }
                    title: Hogeランキング
                    rankingItems:
                      - id: 1
                        name: 富士山
                        rank: 1
                        score: 100
                      - id: 2
                        name: 北岳
                        rank: 2
                        score: 90
                      - id: 3
                        name: 穂高岳
                        rank: 3
                        score: 80
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /judge-types:
    get:
      tags: ["judgeTypes"]
      description: 審査方法の情報
      operationId: getJudgeTypes
      responses:
        "200":
          description: 審査方法の情報取得成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/JudgeType"
components:
  parameters:
    UserId:
      name: user_id
      in: path
      description: ユーザーを識別するID
      required: true
      schema:
        type: integer
  requestBodies:
    UpdateUserBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateUser'
  responses:
    UnauthorizedError:
      description: Unauthorized Error
    NotFound:
      description: Not Found
    UnprocessableEntity:
      description: Unprocessable Entity
    InternalServerError:
      description: Internal Server Error
  schemas:
    User:
      description: レスポンスで返すユーザー情報
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          example: John Doe
    UpdateUser:
      description: 更新する際にリクエストに含めるユーザー情報
      allOf:
        - $ref: '#/components/schemas/User'
    Ranking:
      description: レスポンスで返すランキング情報
      type: object
      allOf:
        - $ref: "#/components/schemas/RankingBase"
        - $ref: "#/components/schemas/RankingItems"
    MyRanking: 
      description: 審査、管理をする人がみるランキング情報
      type: object
      allOf:
        - $ref: "#/components/schemas/RankingBase"
    RankingBase:
      description: ランキング情報の共通部分
      type: object
      required:
        - id
        - title
      properties:
        id:
          type: integer
          example: 1
        user:
          type: object
          items:
            $ref: "#/components/schemas/User"
        title:
          type: string
          example: hogehogeranking
        deadline:
          type: string
          example: '2023-12-29'
    RankingForAdmin:
      description: 審査員、管理者には必要なランキングの情報
      type: object
      properties:
        score_maximum:
          type: integer
          example: 100
        judge_comments:
          type: array
          items:
            $ref: "#/components/schemas/JudgeComment"
    RankingItems: 
      description: 一般ユーザー向けランキング内の投票対象全ての情報
      type: array 
      items:
        $ref: "#/components/schemas/RankingItem"
    RankingItemsForAdmin: 
      description: 一般ユーザー向けランキング内の投票対象全ての情報
      type: array 
      items:
        $ref: "#/components/schemas/RankingItem"
    RankingItem:
      description: ランキング内の投票対象
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: 富士山
        rank:
          type: integer
          example: 1
        score:
          type: integer
          format: int64
          example: 100
        imgUrl:
          type: string
          example: https://minio/img/hoge.png
    RankingItemForAdmin:
      description: ランキング内の投票対象
      allOf:
        - $ref: "#/components/schemas/RankingItem"
        - $ref: "#/components/schemas/Score"
    Scores: 
      description: 対象に対してつけられたすべての点数
      type: array
      items:
        $ref: "#/components/schemas/Score"
    Score:
      description: 対象に対してつけられた点数
      type: object
      properties:
        id:
          type: integer
          example: 1
        score:
          type: integer
          example: 15
        judge:
          type: object
          items:
            $ref: "#/components/schemas/Judge"
    Judge:
      description: 審査員の情報
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: John Doe
    JudgeType:
      description: 審査の仕方の種類。自分で公開するだけか、他の人が採点するかなどの分類
      properties:
        id:
          type: integer
          example: 1
    JudgeComment:
      description: ランキングに対して審査員がつけたコメント
      type: object
      properties:
        id:
          type: integer
          example: 1
        comment:
          type: string
          example: 評価したポイントとしてはこういうところです。
        user:
          type: object
          items:
            $ref: "#/components/schemas/User"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
tags:
  - name: users
    description: Access to Users
  - name: rankings
    description: Access to Rankings
  - name: myRankings
    description: Access to MyRankings
  - name: judgeTypes
    description: Access to JudgeTypes